Critérios de avaliação
1-> Qualidade do código desenvolvido;
2-> Manutenibilidade e legibilidade do código;
3-> Desejavel: Um codigo utilizando boas praticas/padrões para linguagem C/C++ para reduzir os métodos;
4-> Extra: Utilizar mecanismos de garantia de operação;
5-> Extra: Utilizar FreeRTOS em um ou mais desafios.

Etapas que devem ser rigorosamente cumpridas:
1->	Devem ser criados repositórios separadamente para cada desafio no github;
2->	Os repositórios devem ser privados até a data final de avaliação 29/11/2021. Após tal data fica a seu critério;
3->	Deve ser convidado o usuário https://github.com/jPerotto para acompanhar, assim facilita tirar dúvidas.

OBSERVAÇÕES
Para tirar duvidas estarei disponível via whatsapp (62) 98577-7262, envia uma mensagem que fazemos uma videochamada.


//===========--- #AMBIENTE DE DESENVOLVIMENTO# ---===========
Requisitos>
1->	Possuir alguma placa de prototipagem com ESP32 de 4MB* para executar os desafios.
	*caso sua placa tiver um ESP32 com flash superior ou inferior a 4MB consultar orientacoes comigo se achar necessário.
2->	Deve ser utilizado o ESP32 com as libraries/core do arduino da espressif: https://github.com/espressif/arduino-esp32,
	Com a release estavel: https://github.com/espressif/arduino-esp32/releases/tag/1.0.4
3->	Preferencialmente ser desenvolvido utilizando Arduino IDE ou Microsoft Visual Studio Code. Para quem utilizar ATOM ou outras plataformas, 
	o firmware deve ser compativel para compilar na IDE do arduino.
4->	Para realizacao do testes, o candidato estara livre para utilizar qualquer recurso da linguagem de programacao C/C++
	com bibliotecas do arduino-esp32 da espressif, e demais recursos disponiveis do sdk espressif.
5->	Para quando necessario pode ser utilizado bibliotecas publicas do github ou outros. Nesse caso, pode incluir uma pasta libraries ou colocar o link de acesso/download logo afrente do #include <lib.h> // https://github.com/lib
6->	A configuracao da placa deve ser a seguinte:
Placa: "ESP32 Dev Module"
Upload Speed: "921600"
CPU Frequency: "160MHz (WiFi/BT)"
Flash Frequency: "80 MHz"
Flash Mode: "DIO"
Flash Size: "4MB (32Mb)"
Parition Scheme: "Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS)"
Core Debug Level: "Nenhum"
PSRAM: "Disabled"


//===========--- #CRIAR SUA ESTRUTURA BASICA# ---===========
Descriçao: Estrutura basica de configuracao a ser utilizada em todos os desafios. Estamos disponibilizando a forma em que a estrutura deve ser construida,
porem aonde esta #VAR_(0,1...n) voce deve criar uma variavel compativel com um tipo e um nome que acredita representar sua atividade, a descricao no comentario explicara o que ela deve fazer.
A estrutura deve ser construida completamente antes do desafio 01. Retirar os comentarios de explicacao, substituindo por comentarios do que aquela variavel faz, se julgar necessario.


//===========--- #DESAFIO 01 (FILE SYSTEM) # ---===========
Neste desafio você deve preencher a estrutura de configuracao dos desafios e do WiFi, salvar em algum dos sistemas de armazenamento do ESP32, que possa ser recuperado apos um reset.
Pode ser utilizado a lib EEPROM com NVS, NVS direto, SPIFFS, ou algum outro metodo para salvar na flash do ESP32.

-> Resultados esperados:
*Um codigo que compila;
*Preencha estrutura com os valores padrões e definidos;
*Salvar na flash;
*Deve conter um controle de versão de configuração;
*Após um reset carrega os dados para a estrutura sem redefinir os padroes.


//===========--- #DESAFIO 02 (WiFi / MQTT)# ---===========
Neste desafio voce deve carregar a estrutura do file system criada no desafio anterior para a estrutura de configuração do wifi e do desafio;
utilizar a estrutura de configuracao para se conectar ao wifi;
utilizar o protocolo mqtt para se conectar ao broker "broker.mqtt-dashboard.com" para receber configuracoes atraves de um topico "A SUA ESCOLHA".

Voce deve definir o formato da mensagem de configuracao.
A configuracao que será recebida deve ser alteração do "desafios[N_DESAFIOS]" para a variavel #VAR_04 e #VAR_05.
conter na configuração a possibilidade de:
-> selecionar qual posição do vetor do desafios_t desafios[x];
-> selecionar qual será o acionamento que sera alterado;
-> alterar a hora e o minuto do acionamento.

-> Resultados esperados:
*Um codigo que compila;
*Carregue os dados do file system;
*Conecte ao WiFi com ssid e senha da estrutura de configuração carregado do file system;
*Conecte no broker MQTT indicado;
*Receba a configuração somente se validada de alguma forma;
*Receba o comando através do MQTT e altere a hora e o minuto de acionamento de um desafio e acionamento especifico;
*salvar a alteracao no file system.
